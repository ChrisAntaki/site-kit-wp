---
name: Tests

on:
  pull_request:
    branches:
      - '*'

jobs:
  e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 10
      - uses: actions/cache@v1
        name: Cache node modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v1
        name: Cache PHP modules
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Install node dependencies
        run: npm ci
      - name: Install grunt globally
        run: npm install -g gulp-cli
      - name: Install PHP dependencies
        run: composer install
      - name: Build plugin
        run: npm run build
      - name: Start Docker Containers
        run: COMPOSE_INTERACTIVE_NO_CLI=true npm run env:start
      - name: Run E2E Tests (WordPress release)
        run: COMPOSE_INTERACTIVE_NO_CLI=true npm run test:e2e:ci
  # e2e-wp47:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #     - uses: actions/setup-node@v1
  #       with:
  #         node-version: 10
  #     - uses: actions/cache@v1
  #       name: Cache node modules
  #       with:
  #         path: ~/.npm
  #         key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-node-
  #     - name: Get Composer Cache Directory
  #       id: composer-cache
  #       run: |
  #         echo "::set-output name=dir::$(composer config cache-files-dir)"
  #     - uses: actions/cache@v1
  #       name: Cache PHP modules
  #       with:
  #         path: ${{ steps.composer-cache.outputs.dir }}
  #         key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-composer-
  #     - name: Install node dependencies
  #       run: npm ci
  #     - name: Install PHP dependencies
  #       run: composer install
  #     - name: Build plugin
  #       run: npm run build
  #     - name: Start Docker Containers
  #       run: npm run env:start
  #     - name: Run E2E Tests (WordPress 4.7)
  #       run: WP_VERSION=4.7.13 npm run test:e2e:ci
  # e2e-wp49:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #     - uses: actions/setup-node@v1
  #       with:
  #         node-version: 10
  #     - uses: actions/cache@v1
  #       name: Cache node modules
  #       with:
  #         path: ~/.npm
  #         key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-node-
  #     - name: Get Composer Cache Directory
  #       id: composer-cache
  #       run: |
  #         echo "::set-output name=dir::$(composer config cache-files-dir)"
  #     - uses: actions/cache@v1
  #       name: Cache PHP modules
  #       with:
  #         path: ${{ steps.composer-cache.outputs.dir }}
  #         key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-composer-
  #     - name: Install node dependencies
  #       run: npm ci
  #     - name: Install PHP dependencies
  #       run: composer install
  #     - name: Build plugin
  #       run: npm run build
  #     - name: Start Docker Containers
  #       run: npm run env:start
  #     - name: Run E2E Tests (WordPress 4.9 + Gutenberg 4.9)
  #       run: WP_VERSION=4.9.10 GUTENBERG_VERSION=4.9.0 npm run test:e2e:ci
